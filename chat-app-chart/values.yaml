# Default values for echo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

deploy:
  replicaCount: 2

  image:
    repository: 403567978083.dkr.ecr.eu-central-1.amazonaws.com/chat
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.0.0"

  containerPort: 5000

  resources:
    req:
      memory: "64Mi"
      cpu:    "250m"
    lim:
      memory: "128Mi"
      cpu:    "500m"

service:
  type: NodePort
  port: 5000


ingress:
  enabled: true
  annotations: 
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-cert"
  tls: 
  - hosts:
    - www.silvering.tk
    secretName: chat-app-secret
  rules:
  - host: www.silvering.tk

  paths:
  - pathType: Prefix
    path: "/"
    
  backend:
  - service:
      name: chat-internal-svc
      port: 5000

cluster_issuer:
  name: letsencrypt-cert
  namespace: cert-manager
  email: silveing@gmail.com
  # server: https://acme-v02.api.letsencrypt.org/directory       ## Uncomment this for issuing a valid certificate
  server: https://acme-staging-v02.api.letsencrypt.org/directory ## Issuing a invalid certificate --> Just for testing
  secretName: chat-app-secret

configMap:
  name: chat-cnfmap
  track_modifications: 'False'

secretMap:
  name: chat-secrets
  dburi: mysql+pymysql://flask:flask@chat-mysql-headless/chat
  secret_key: my-very-strong-secret-key

mysql:
  auth: 
    rootPassword: root
    database: chat
    username: flask
    password: flask

  ## install mysql-exporter for parsing metrics for prometheus  
  metrics:
    enabled: true
    serviceMonitor: 
      enabled: true
      additionalLabels:
        release: prometheus